meta {
  name: Users - Update User with Duplicate Email
  type: http
  seq: 36
}

put {
  url: http://localhost:8081/api/users/{{newUserId}}
  body: json
  auth: bearer
}

auth:bearer {
  token: {{authToken}}
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "email": "admin@raf.rs",
    "firstName": "Bruno",
    "lastName": "Test",
    "userType": "event creator",
    "status": "active"
  }
}

tests {
  test("Update user with duplicate email should return 400", function() {
    expect(res.getStatus()).to.equal(400);
  });
  
  test("Response should contain error message about duplicate email", function() {
    const responseJson = res.getBody();
    expect(responseJson).to.have.property('message');
    expect(responseJson.message).to.be.a('string');
    expect(responseJson.message.toLowerCase()).to.include('email');
  });
}